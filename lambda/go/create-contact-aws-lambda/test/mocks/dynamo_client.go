// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	models "github.com/ezequiel-uala/contacts/lambda/go/create-contact-aws-lambda/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// DynamoClient is an autogenerated mock type for the DynamoClient type
type DynamoClient struct {
	mock.Mock
}

// CreateContact provides a mock function with given fields: contact
func (_m *DynamoClient) CreateContact(contact models.Contact) (models.Contact, error) {
	ret := _m.Called(contact)

	var r0 models.Contact
	if rf, ok := ret.Get(0).(func(models.Contact) models.Contact); ok {
		r0 = rf(contact)
	} else {
		r0 = ret.Get(0).(models.Contact)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.Contact) error); ok {
		r1 = rf(contact)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewDynamoClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewDynamoClient creates a new instance of DynamoClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDynamoClient(t mockConstructorTestingTNewDynamoClient) *DynamoClient {
	mock := &DynamoClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
